name: Docker Image CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ["ubuntu-latest", "windows-latest"]
    steps:
    - uses: actions/checkout@v2
    
    - name: Build the Docker cross platform image
      run: docker build . --file Dockerfile --tag image:ci

    - uses: knicknic/temp-kubernetes-ci@master
    
    - run: echo `pwd`
    - run: sleep 10
    - run: kubectl get node
    - run: kubectl apply -f test/pod.yaml

    - run: sleep 10
    
    - run: kubectl get pod powershell-web-test -o yaml
    
    - run: kubectl describe pod powershell-web-test

    - name: test pod comes up
      run: | 
        # test for 120 to see if pod will go ready
        foreach($second in 1..120){
          $p = kubectl get pod powershell-web-test -o json | ConvertFrom-Json
          # ensure it goes ready
          if($p.status.phase -eq "Ready"){
              # show pod status
              kubectl get pod powershell-web-test -o yaml

              $request = Invoke-WebRequest $p.status.podIP
              $request 
              if($request.RawContent.Contains("Hi")){
                  exit 0
              }
              else{
                  "request is malformed"
                  exit 1
              }
          }
          sleep 1;
        }
        exit 1
      shell: pwsh

            
    # - name: Build the Docker image Linux
    #   run: docker build . --file Dockerfile --tag image:ci
    #   if: matrix.os == 'ubuntu-latest'

    # - name: Build the Docker image Windows
    #   run: docker build . --file Dockerfile.windows --tag image:ci
    #   if: matrix.os == 'windows-latest'

      # uses: docker/build-push-action@v1.1.0
      # with:
      #   push: false
      #   repository: image
      #   tags: ci
