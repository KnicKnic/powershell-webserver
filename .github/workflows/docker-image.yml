name: Docker Image CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ["ubuntu-latest", "windows-latest"]
    steps:
    - uses: actions/checkout@v2
    
    - name: Build the Docker cross platform image
      run: docker build . --file Dockerfile --tag image:ci

    - uses: knicknic/temp-kubernetes-ci@master
    
    - run: kubectl apply -f test/pod.yaml

    # - run: kubectl get pod powershell-web-test -o yaml
    
    # - run: kubectl describe pod powershell-web-test

    - run: |
        kubectl wait --timeout=10s --for=condition=Ready pod/powershell-web-test
        kubectl logs pod/powershell-web-test
        kubectl get pod -o yaml
        kubectl describe pod powershell-web-test
        kubectl wait --timeout=10s --for=condition=Ready pod/powershell-web-test
        

    - name: Test web page
      run: | 
        $p = kubectl get pod powershell-web-test -o json | ConvertFrom-Json
        $request = Invoke-WebRequest $p.status.podIP
        $request 
        if($request.RawContent.Contains("Hi")){
            exit 0
        }
        exit 1
      shell: pwsh

            
    # - name: Build the Docker image Linux
    #   run: docker build . --file Dockerfile --tag image:ci
    #   if: matrix.os == 'ubuntu-latest'

    # - name: Build the Docker image Windows
    #   run: docker build . --file Dockerfile.windows --tag image:ci
    #   if: matrix.os == 'windows-latest'

      # uses: docker/build-push-action@v1.1.0
      # with:
      #   push: false
      #   repository: image
      #   tags: ci
